"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PacketSessionHistoryDataParser = void 0;
const f1_parser_1 = require("../../f1.parser");
const parser_1 = require("../../PacketHeader/parser");
class LapHistoryDataParser extends f1_parser_1.F1Parser {
    constructor() {
        super();
        this.uint32le('m_lapTimeInMS').uint16le('m_sector1TimeInMS').uint16le('m_sector2TimeInMS').uint16le('m_sector3TimeInMS').uint8('m_lapValidBitFlags');
    }
}
class PacketSessionHistoryDataParser extends f1_parser_1.F1Parser {
    constructor(buffer) {
        super();
        this.endianess('little')
            .nest('m_header', {
            type: new parser_1.PacketHeaderParser(),
        })
            .uint8('m_carIdx')
            .uint8('m_numLaps')
            .uint8('m_numTyreStints')
            .uint8('m_bestLapTimeLapNum')
            .uint8('m_bestSector1LapNum')
            .uint8('m_bestSector2LapNum')
            .uint8('m_bestSector3LapNum')
            .array('m_lapHistoryData', {
            length: 100,
            type: new LapHistoryDataParser(),
        })
            .array('m_tyreStintsHistoryData', {
            length: 8,
            type: new TyreStintHistoryDataParser(),
        });
        this.data = this.fromBuffer(buffer);
        this.data.m_header.m_sessionUID = this.data.m_header.m_sessionUID.toString();
    }
}
exports.PacketSessionHistoryDataParser = PacketSessionHistoryDataParser;
class TyreStintHistoryDataParser extends f1_parser_1.F1Parser {
    constructor() {
        super();
        this.uint8('m_endLap').uint8('m_tyreActualCompound').uint8('m_tyreVisualCompound');
    }
}
//# sourceMappingURL=index.js.map