"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PacketFinalClassificationDataParser = exports.FinalClassificationDataParser = void 0;
const binary_parser_1 = require("binary-parser");
const parser_1 = require("../../PacketHeader/parser");
const f1_parser_1 = require("../../f1.parser");
class FinalClassificationDataParser extends f1_parser_1.F1Parser {
    constructor() {
        super();
        this.uint8('m_position')
            .uint8('m_numLaps')
            .uint8('m_gridPosition')
            .uint8('m_points')
            .uint8('m_numPitStops')
            .uint8('m_resultStatus')
            .uint32le('m_bestLapTimeInMS')
            .doublele('m_totalRaceTime')
            .uint8('m_penaltiesTime')
            .uint8('m_numPenalties')
            .uint8('m_numTyreStints')
            .array('m_tyreStintsActual', {
            length: 8,
            type: new binary_parser_1.Parser().uint8(''),
        })
            .array('m_tyreStintsVisual', {
            length: 8,
            type: new binary_parser_1.Parser().uint8(''),
        })
            .array('m_tyreStintsEndLaps', {
            length: 8,
            type: new binary_parser_1.Parser().uint8(''),
        });
    }
}
exports.FinalClassificationDataParser = FinalClassificationDataParser;
class PacketFinalClassificationDataParser extends f1_parser_1.F1Parser {
    constructor(buffer) {
        super();
        this.endianess('little')
            .nest('m_header', {
            type: new parser_1.PacketHeaderParser(),
        })
            .uint8('m_numCars')
            .array('m_classificationData', {
            length: 22,
            type: new FinalClassificationDataParser(),
        });
        this.data = this.fromBuffer(buffer);
        this.data.m_header.m_sessionUID = this.data.m_header.m_sessionUID.toString();
    }
}
exports.PacketFinalClassificationDataParser = PacketFinalClassificationDataParser;
//# sourceMappingURL=index.js.map